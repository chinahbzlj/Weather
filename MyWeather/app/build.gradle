apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin
def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("GMT+8"))
}
repositories {
    flatDir {
        dir 'libs'
    }
    google()
}
android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'
    signingConfigs {
        debug {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            def sdkDir = properties.getProperty('signing.debug.key')
            storeFile file(sdkDir)
            storePassword properties.getProperty('RELEASE_STORE_PASSWORD')
            keyAlias properties.getProperty('RELEASE_KEY_ALIAS')
            keyPassword properties.getProperty('RELEASE_KEY_PASSWORD')
        }
    }
    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }
    }
    defaultConfig {
        applicationId "com.zhou.myweather"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0.1"
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'armeabi-v7a'//, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    allprojects {
        gradle.projectsEvaluated {
            tasks.withType(JavaCompile) {
                options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
            }
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${'天气预报'}${releaseTime()}.apk"
        }
    }

}

greendao {
    //指定数据库schema版本号，迁移等操作会用到
    schemaVersion 2

    //DaoSession、DaoMaster以及所有实体类的dao生成的目录,默认为你的entity所在的包名
    //daoPackage 包名
    daoPackage 'com.zhou.myweather'

    //这就是我们上面说到的自定义生成数据库文件的目录了，可以将生成的文件放到我们的java目录中，而不是build中，这样就不用额外的设置资源目录了
    //工程路径
    targetGenDir 'src/main/java'
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha7'
    compile 'com.android.support:support-vector-drawable:23.4.0'
    compile 'com.android.support:support-v4:23.4.0'
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:design:25.0.0'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.2.0'
    compile 'com.squareup.retrofit2:converter-scalars:2.2.0'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.orhanobut:logger:2.1.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    //    compile 'com.squareup.picasso:picasso:2.3.2'
    compile files('libs/jxl.jar')
    compile 'com.mylhyl:acp:1.0.0'
    compile 'net.zetetic:android-database-sqlcipher:3.5.7'
    compile 'org.greenrobot:greendao:3.2.2'
    // add library
    compile project(':DatePicker')
    //    compile 'com.tencent.bugly:crashreport:latest.release' //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    //    compile 'com.tencent.bugly:nativecrashreport:latest.release' //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
    compile 'com.tencent.bugly:crashreport:2.1.9'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    compile 'com.tencent.bugly:nativecrashreport:3.0'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
    compile 'com.github.bumptech.glide:glide:4.3.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.3.1'
    implementation files('libs/BaiduLBS_Android.jar')

}
